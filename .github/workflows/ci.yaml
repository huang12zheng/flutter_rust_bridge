name: CI

on:
  push:
    paths-ignore:
      - "docs/**"
      - "**/*.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**/*.md"

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  # ref https://betterprogramming.pub/test-flutter-apps-on-android-with-github-actions-abdba2137b4
  flutter_test_android:
    name: Flutter integration test on Android
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        device: ["pixel", "Nexus 6"]
        api-level: [29]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          channel: "stable"
          flutter-version: 3.7.3
          architecture: x64
      - id: checkout
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.68.0
      - uses: actions/setup-java@v1
        with:
          java-version: "11.x" # "betterprogramming.pub" says must be java "8"
      - uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # #499, https://github.com/actions/virtual-environments/issues/5595
      - uses: nttld/setup-ndk@v1
        with:
          ndk-version: r21e # r25b
          local-cache: true
      - id: cache-deps
        uses: ./.github/actions/setup
        with:
          cache-key: "${{ steps.rust-toolchain.outputs.cachekey }}"
          cache-os: "${{ matrix.device }}"

      - name: Add Rust targets
        run: rustup target add x86_64-linux-android

      - name: Install `cargo-ndk`
        run: just install_ndk

      - name: Install Flutter dependencies
        working-directory: ./frb_example/with_flutter
        run: flutter pub get

      - name: Build Rust lib
        working-directory: ./frb_example/with_flutter/rust
        # NOTE since run on simulator, need -t to be x86_64. For real devices, of course arm-like ones.
        run: cargo ndk --bindgen -t x86_64 -o ../android/app/src/main/jniLibs build
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-api-level-${{ matrix.api-level }}
      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      # it would success if timeout...
      - name: Run Flutter integration tests
        continue-on-error: true
        timeout-minutes: 20
        uses: Wandalen/wretry.action@v1.0.25
        with:
          action: reactivecircus/android-emulator-runner@v2
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          with: |
            api-level: ${{ matrix.api-level }}
            arch: x86_64
            profile: ${{ matrix.device }}
            script: cd frb_example/with_flutter && flutter test integration_test/main.dart --verbose
