name: CI

on:
  push:
    paths-ignore:
      - "docs/**"
      - "**/*.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**/*.md"

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  flutter_test_ios:
    name: Flutter integration test on iOS
    strategy:
      matrix:
        device:
          - "iPad (9th generation) Simulator (16.2)"
          - "iPhone 12 Pro Max Simulator (16.2)"
      fail-fast: false
    runs-on: macos-latest

    steps:
      - name: "List all simulators"
        run: "xcrun xctrace list devices"
      - name: "Start Simulator"
        run: |
          # the extra "(" is to avoid matching things like "iPhone 12 Pro Max Simulator (16.2) + Apple Watch Series 5 - 44mm (8.0)"
          UDID=$(xcrun xctrace list devices | grep '${{ matrix.device }} (' | awk '{print $NF}' | tr -d '()')
          echo UDID=$UDID
          xcrun simctl boot "${UDID:?No Simulator with this name found}"

      - uses: actions/checkout@v2
        id: checkout
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: 3.7.3
          cache: true
          architecture: x64
      - id: cache-deps
        uses: ./.github/actions/setup
        with:
          cache-key: "steps.checkout.outputs.rustc_hash"
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.68.0

      - name: Add Rust targets
        run: rustup target add aarch64-apple-ios x86_64-apple-ios

      - name: Install `cargo-lipo`
        run: |
          PACKAGE_NAME=cargo-lipo

          VERSION=$(cargo search $PACKAGE_NAME | grep $PACKAGE_NAME | cut -d '"' -f 2)

          if ! [ -x "$(command -v $PACKAGE_NAME)" ]; then
            echo "$PACKAGE_NAME not found. Installing version $VERSION ..."
            cargo install $PACKAGE_NAME --version $VERSION
          elif ! $PACKAGE_NAME --version | grep -q $VERSION; then
            echo "Updating $PACKAGE_NAME to version $VERSION ..."
            cargo install $PACKAGE_NAME --version $VERSION --force
          else
            echo "Already installed the correct version of $PACKAGE_NAME."
          fi

      - name: Install Flutter dependencies
        working-directory: ./frb_example/with_flutter
        run: flutter pub get

      - name: Build Rust lib
        working-directory: ./frb_example/with_flutter/rust
        # note the "-i '' -e" is a bug of sed specific to MacOS https://stackoverflow.com/questions/19456518
        run: |
          sed -i '' -e 's/"cdylib"/"staticlib"/g' Cargo.toml
          cargo lipo
          cp ../../../target/universal/debug/libflutter_rust_bridge_example.a ../ios/Runner

      - name: Run Flutter integration tests
        working-directory: ./frb_example/with_flutter
        run: flutter test integration_test/main.dart --verbose
